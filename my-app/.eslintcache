[{"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js":"1","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\App.js":"2","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js":"3","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js":"4","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js":"5","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\SearchAppBar.js":"6","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\ButtonAppBar.js":"7","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Experimentando\\TablaListado.js":"8","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\estilista.js":"9","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\PopOver\\PopOver.js":"10","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Card\\AppCard.js":"11","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js":"12","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js":"13","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js":"14","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js":"15","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Validar\\Validar.js":"16","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Validar\\cargarErrores.js":"17","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\NuevaSolicitud.js":"18","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\UserContext\\UserContext.js":"19","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListaLibros.js":"20","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\NuevoLibro\\NuevoLibro.js":"21","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\NuevoLibro\\Base64.js":"22"},{"size":438,"mtime":1611178945326,"results":"23","hashOfConfig":"24"},{"size":4979,"mtime":1611253278507,"results":"25","hashOfConfig":"24"},{"size":327,"mtime":1611096281040,"results":"26","hashOfConfig":"24"},{"size":2384,"mtime":1611176109242,"results":"27","hashOfConfig":"24"},{"size":3436,"mtime":1611153594543,"results":"28","hashOfConfig":"24"},{"size":1285,"mtime":1611158283525,"results":"29","hashOfConfig":"24"},{"size":1117,"mtime":1610572414590,"results":"30","hashOfConfig":"24"},{"size":8706,"mtime":1611176109209,"results":"31","hashOfConfig":"24"},{"size":1446,"mtime":1610564820706,"results":"32","hashOfConfig":"24"},{"size":977,"mtime":1610375192281,"results":"33","hashOfConfig":"24"},{"size":1637,"mtime":1610375521846,"results":"34","hashOfConfig":"24"},{"size":180,"mtime":1609431900110,"results":"35","hashOfConfig":"24"},{"size":2075,"mtime":1609879417240,"results":"36","hashOfConfig":"24"},{"size":2535,"mtime":1611083511225,"results":"37","hashOfConfig":"24"},{"size":2421,"mtime":1611083511298,"results":"38","hashOfConfig":"24"},{"size":175,"mtime":1611083230875,"results":"39","hashOfConfig":"24"},{"size":765,"mtime":1611159281854,"results":"40","hashOfConfig":"24"},{"size":10576,"mtime":1611165853780,"results":"41","hashOfConfig":"24"},{"size":89,"mtime":1611153499038,"results":"42","hashOfConfig":"24"},{"size":3540,"mtime":1611153594540,"results":"43","hashOfConfig":"24"},{"size":6895,"mtime":1611257218942,"results":"44","hashOfConfig":"24"},{"size":698,"mtime":1611248901547,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"e8odm",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js",["93"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport theme from '../src/componentes/Theme/theme';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { NuevoLibro } from './componentes/NuevoLibro/NuevoLibro';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <ThemeProvider theme={theme}>\r\n      <NuevoLibro/>\r\n    </ThemeProvider>,\r\n \r\n   document.getElementById('root')\r\n);\r\n\r\n\r\n",["94","95"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\App.js",["96"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\SearchAppBar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\ButtonAppBar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Experimentando\\TablaListado.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\estilista.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\PopOver\\PopOver.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Card\\AppCard.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Validar\\Validar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Validar\\cargarErrores.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\NuevaSolicitud.js",["97","98"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {FormControl, TextField, Button, Grid, Container, Snackbar, IconButton} from '@material-ui/core';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport ButtonAppBar from '../App Bar/ButtonAppBar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Validar from './Validar/Validar';\r\nimport cargarErrores from './Validar/cargarErrores';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport '../Libro/libro.css';\r\n\r\n    \r\nexport const NuevaSolicitud = ({solicitud , Volver, Dato, Libros}) => {\r\n    \r\n    const [age, setAge] = React.useState('');\r\n    const handleChange = (event) => {\r\n      setAge(event.target.value);\r\n    };\r\n    const [libro, setLibro] =  useState(Dato)\r\n    \r\n    const [errores, setErrores] = useState({\r\n      Nombre:false,\r\n      Autor:false,\r\n      Editorial:false,\r\n      Año:false,\r\n      Imagen:false,\r\n      prestamo:false,\r\n      devolucion:false,\r\n      Dueño:false,\r\n    });\r\n\r\n    const disabledCampos = Object.keys(Dato).length>0?true:false;\r\n    \r\n    const [controlAlert, setControlAlert] = useState(false);\r\n    const [mensajeAlert, setMensajeAlert] = useState('');\r\n    const [severity, setSeverity] = useState('error');\r\n    \r\n    \r\n\r\n        //CAMBIOS LIBRO Y PROPIETARIO\r\n    const controlCambios = (name, value)=>{\r\n      setLibro({ ...libro,[name]:value });\r\n      if(value!==''){\r\n      setErrores({...errores,[name]:false});\r\n    }\r\n    else{\r\n      setErrores({...errores,[name]:true});\r\n    }\r\n  }\r\n        // BOTON EXAMINAR //\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          }\r\n        },\r\n        input: {\r\n          display: 'none'\r\n        },\r\n      }));\r\n    const classes = useStyles();\r\n    //\r\n  \r\n   \r\n\r\n   const validarDatos = () =>{\r\n   \r\n    const { devolucion, prestamo }=libro;\r\n    const resultado = cargarErrores(libro, Object.keys(errores));\r\n    \r\n    setErrores(resultado);\r\n\r\n    Object.keys(resultado).map( error=>{\r\n\r\n      if(resultado[error]===true){\r\n        Validar(setControlAlert, setMensajeAlert);\r\n      }\r\n      else{\r\n        if( Date.parse( prestamo ) <= Date.parse( devolucion ) ){\r\n          if(libro.Imagen){\r\n            setSeverity(\"success\")\r\n            solicitud(libro);\r\n          }\r\n          else{\r\n            setControlAlert(true);\r\n            setMensajeAlert(\"Debe Cargar Imagen!\");\r\n          }\r\n        }\r\n        else{\r\n          setControlAlert(true);\r\n            setMensajeAlert(\"Fechas Inválidas, favor de Verificar!\");\r\n        }\r\n      }\r\n     \r\n      return true;\r\n    });\r\n    \r\n  }\r\n\r\n    const resetear = () => {\r\n      setLibro({});\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ButtonAppBar volver={Volver}/>\r\n        <Container className=\"contenedor-Form\">\r\n                  <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" spacing={1} className=\"margen\">\r\n                    <Grid item lg={5}>\r\n                    <FormControl id=\"formulario\" className=\"formulario-left\">\r\n                      <h2>Detalles de Solicitud</h2>\r\n                     <br/>\r\n                    <TextField\r\n                      id=\"prestamo\"\r\n                      name=\"prestamo\"\r\n                      type=\"date\"\r\n                      label=\"Fecha de Préstamo\"\r\n                      value={libro.prestamo?libro.prestamo:''}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e.target.name, e.target.value)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={errores.prestamo}\r\n                      required\r\n                    />\r\n                    <br/>\r\n                    <TextField\r\n                      id=\"devolucion\"\r\n                      name=\"devolucion\"\r\n                      label=\"Fecha de Devolución\"\r\n                      type=\"date\"\r\n                      value={libro.devolucion?libro.devolucion:''}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e.target.name, e.target.value)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={errores.devolucion}\r\n                      required\r\n                    />\r\n                    <br/>                    \r\n                    <TextField\r\n                      name=\"Dueño\" \r\n                      id=\"Dueño\" \r\n                      label=\"Solicitante\" \r\n                      variant=\"standard\"\r\n                      value={libro.Dueño?libro.Dueño:''}\r\n                      onChange={e => controlCambios(e.target.name, e.target.value)}\r\n                      error={errores.Dueño}\r\n                      required\r\n                    />\r\n                    <br/>\r\n                    </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={5} className=\"\">\r\n                    <FormControl size=\"medium\" id=\"formulario\" className=\"formulario-right\">\r\n                        <h2>Detalles de Libro</h2>\r\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">Libros</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={age}\r\n                            onChange={handleChange}\r\n                        >\r\n\r\n                          { Libros.map((name) => (\r\n                            <MenuItem key={name.Id_Libro} value={name.Id_Libro}>\r\n                              {name.Nom_Libro}\r\n                              </MenuItem>\r\n                          ))}\r\n                          \r\n                        </Select>\r\n                        <TextField\r\n                          name=\"Nombre\"\r\n                          id=\"Nombre\" \r\n                          disabled={disabledCampos}\r\n                          type=\"text\"\r\n                          label=\"Nombre de Libro\" \r\n                          value={libro.Nombre?libro.Nombre:''}\r\n                          variant=\"standard\"\r\n                          onChange={(e)=> controlCambios(e.target.name, e.target.value)}\r\n                          error={errores.Nombre}\r\n                          helperText={''}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Autor\"\r\n                          name=\"Autor\"\r\n                          type=\"text\"\r\n                          label=\"Autor\"\r\n                          variant=\"standard\"\r\n                          value={libro.Autor?libro.Autor:''}\r\n                          className={classes.textField}\r\n                          onChange={ e =>controlCambios(e.target.name, e.target.value)}\r\n                          disabled={disabledCampos}\r\n                          error={errores.Autor}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Editorial\"\r\n                          name=\"Editorial\"\r\n                          type=\"text\"\r\n                          label=\"Editorial\"\r\n                          variant=\"standard\"\r\n                          value={libro.Editorial?libro.Editorial:''}\r\n                          className={classes.textField}\r\n                          onChange={ (e) =>controlCambios(e.target.name, e.target.value)}\r\n                          disabled={disabledCampos}\r\n                          error={errores.Editorial}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Año\"\r\n                          name=\"Año\"\r\n                          type=\"text\"\r\n                          label=\"Año de Edición\"\r\n                          value={libro.Año?libro.Año:''}\r\n                          variant=\"standard\"\r\n                          onChange={ (e) =>controlCambios(e.target.name, e.target.value)}\r\n                          disabled={disabledCampos}\r\n                          error={errores.Año}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                    <div className=\"contained\">\r\n                      <input \r\n                        name=\"Imagen\"\r\n                        accept=\"image/*\" \r\n                        className={classes.input} \r\n                        id=\"icon-button-file\" \r\n                        type=\"file\" \r\n                        value={libro.Imagen?libro.Imagen:''}\r\n                        onChange={ (e) =>controlCambios(e.target.name, e.target.value)}\r\n                        />\r\n                      <label htmlFor=\"icon-button-file\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                          <PhotoCamera />\r\n                        </IconButton>\r\n                        <span>{libro.Imagen?libro.Imagen:`No se cargó Imagen`}</span>\r\n                      </label>\r\n                    </div>\r\n                   </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n        </Container>\r\n        \r\n        <div className=\"contenedor-botones\">\r\n          <Button \r\n            className=\"boton1\"\r\n            onClick={e=>resetear(e)} \r\n            variant=\"outlined\"\r\n            disabled={disabledCampos}\r\n            color=\"primary\">Limpiar Campos</Button>\r\n            <br/>\r\n         <Button \r\n            onClick={validarDatos} \r\n            variant=\"outlined\" \r\n            color=\"primary\" \r\n            className=\"boton2\">Agregar Solicitud</Button>\r\n            \r\n          <Snackbar \r\n            open={controlAlert} \r\n            autoHideDuration={2000} \r\n            onClose={controlAlert, ()=>setControlAlert(false)}\r\n            anchorOrigin={{ vertical:'top', horizontal:'center' }}\r\n          >\r\n            <Alert onClose={controlAlert, ()=>setControlAlert(false)} severity={severity} variant=\"filled\">\r\n              {mensajeAlert}\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </>  \r\n    )\r\n}\r\n\r\nexport default NuevaSolicitud;\r\n\r\n","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\UserContext\\UserContext.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListaLibros.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\NuevoLibro\\NuevoLibro.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\NuevoLibro\\Base64.js",[],{"ruleId":"99","severity":1,"message":"100","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":11},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"99","severity":1,"message":"107","line":26,"column":16,"nodeType":"101","messageId":"102","endLine":26,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":271,"column":34,"nodeType":"110","messageId":"111","endLine":271,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":274,"column":41,"nodeType":"110","messageId":"111","endLine":274,"endColumn":42},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'getDataLibros' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]