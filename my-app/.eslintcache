[{"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js":"1","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js":"2","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js":"3","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js":"4","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js":"5","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js":"6","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js":"7","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js":"8","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\Theme.js":"9","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js":"10","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\App.js":"11","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\ButtonAppBar.js":"12","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\SearchAppBar.js":"13","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\ModificarLibro.js":"14","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Card\\Card.js":"15","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Popover\\SimplePopover.js":"16"},{"size":350,"mtime":1610030961228,"results":"17","hashOfConfig":"18"},{"size":11246,"mtime":1610058069210,"results":"19","hashOfConfig":"18"},{"size":1157,"mtime":1610055204404,"results":"20","hashOfConfig":"18"},{"size":8478,"mtime":1610051911359,"results":"21","hashOfConfig":"18"},{"size":2075,"mtime":1609879417240,"results":"22","hashOfConfig":"18"},{"size":2417,"mtime":1609944412265,"results":"23","hashOfConfig":"18"},{"size":180,"mtime":1609431900110,"results":"24","hashOfConfig":"18"},{"size":2523,"mtime":1609944412253,"results":"25","hashOfConfig":"18"},{"size":254,"mtime":1609773027499,"results":"26","hashOfConfig":"18"},{"size":327,"mtime":1610051487569,"results":"27","hashOfConfig":"18"},{"size":1760,"mtime":1610056176744,"results":"28","hashOfConfig":"18"},{"size":1114,"mtime":1610054065064,"results":"29","hashOfConfig":"18"},{"size":2587,"mtime":1609881467844,"results":"30","hashOfConfig":"18"},{"size":7328,"mtime":1609944412101,"results":"31","hashOfConfig":"18"},{"size":1591,"mtime":1609948879381,"results":"32","hashOfConfig":"18"},{"size":1438,"mtime":1610043782161,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"e8odm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js",[],["71","72"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js",["73","74"],"import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {FormControl, TextField, Button, Grid, Container} from '@material-ui/core';\r\nimport ButtonAppBar from '../App Bar/ButtonAppBar';\r\nimport '../Libro/libro.css';\r\n\r\n    \r\nexport const Libro = ({NuevoLibro , Volver, solicitudAModificar}) => {\r\n\r\n    const [libro, setLibro] = useState({\r\n        Id:'',\r\n        Nombre:'',\r\n        Dueño:'',\r\n        Imagen:'',\r\n        prestamo: '',\r\n        devolucion:'',\r\n        Eliminado:false,\r\n        Autor:'',\r\n        Editorial:'',\r\n        Año:''\r\n    })\r\n\r\n\r\n    const [controlLibro, setControlLibro] = useState(false);\r\n    const [controlDueño, setControlDueño] = useState(false);\r\n    const [controlFechaPrestamo, setcontrolFechaPrestamo] = useState(false);\r\n    const [controlFechaDevolucion, setcontrolFechaDevolucion] = useState(false);\r\n    const [controlAutor, setcontrolAutor] = useState(false);\r\n    const [controlEditorial, setcontrolEditorial] = useState(false);\r\n    const [controlAño, setcontrolAño] = useState(false);\r\n    const [controlBoton, setcontrolBoton] = useState(true);\r\n\r\n    useEffect(() => {\r\n      if(solicitudAModificar){\r\n        console.log(Date.parse(solicitudAModificar.prestamo));\r\n        const fprestamo =solicitudAModificar.prestamo;\r\n        setLibro(solicitudAModificar);\r\n      }\r\n    }, [])\r\n\r\n        //CAMBIOS LIBRO Y PROPIETARIO\r\n    const controlCambios = (e)=>{\r\n      setLibro({...libro,[e.target.name]:e.target.value}) \r\n    }\r\n\r\n        // BOTON EXAMINAR //\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n      }));\r\n    const classes = useStyles();\r\n    //\r\n\r\n    const validacionLibro = () => {\r\n      if(libro.Nombre===\"\")\r\n        setControlLibro(true);\r\n        else{\r\n          setControlDueño(false);\r\n          setcontrolBoton(false);\r\n        }\r\n\r\n    }\r\n    \r\n    const validacionDueño = () =>{\r\n      if(libro.Dueño===\"\")\r\n        setControlDueño(true);\r\n      else{\r\n        setControlDueño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n\r\n    const validarFechaPrestamo = (e) =>{\r\n      if(libro.prestamo===\"\")\r\n        setcontrolFechaPrestamo(true);\r\n        else{\r\n          setControlDueño(false);\r\n          setcontrolBoton(false);\r\n        }\r\n    }\r\n\r\n    const validarFechaDevolucion = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolFechaDevolucion(true);\r\n      else{\r\n        setControlDueño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n    const validarAutor = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolAutor(true);\r\n      else{\r\n        setcontrolAutor(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n    const validarEditorial = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolEditorial(true);\r\n      else{\r\n        setcontrolEditorial(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n    const validarAño = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolAño(true);\r\n      else{\r\n        setcontrolAño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n\r\n    const validarDatos = ()=>{\r\n      const {Nombre, Dueño, Imagen, devolucion, prestamo, Autor, Editorial, Año}=libro;\r\n      \r\n      if(Nombre){\r\n        if(prestamo){\r\n          if(devolucion){\r\n            if(Date.parse(prestamo)>=Date.parse(devolucion))\r\n              alert(\"Fechas Inválidas! Verificar!!\");\r\n            if(Dueño){\r\n              if(Imagen){\r\n                if(Autor){\r\n                  if(Editorial){\r\n                    if(Año){\r\n                      alert(\"DATOS CORRECTOS!!! OBJETO CARGADO CORRECTAMENTE!!!\");\r\n                      console.log(Libro);\r\n                      NuevoLibro(libro);\r\n                    }\r\n                    else\r\n                      alert(\"Debe cargar Año de la Edición del Libro\");\r\n                  }\r\n                  else\r\n                    alert(\"Debe cargar Editorial del Libro\");\r\n                }\r\n                else\r\n                  alert(\"Debe cargar Autor del Libro\");\r\n              }\r\n                else{\r\n                  alert(\"Debe cargar Imagen\");\r\n                }\r\n            }\r\n            else\r\n             alert(\"Debe cargar Propietario\");\r\n          }\r\n          else\r\n            alert(\"Debe cargar Fecha de Devolución\");\r\n        }\r\n        else\r\n          alert(\"Debe cargar Fecha de Préstamo\");\r\n      }\r\n      else\r\n        alert(\"Debe cargar Nombre de Libro\");\r\n    \r\n      \r\n    }\r\n    const resetear = () => {\r\n      setLibro({\r\n        Nombre:'',\r\n        Dueño:'',\r\n        Imagen:'',\r\n        prestamo: '',\r\n        devolucion:'',\r\n        Autor:'',\r\n        Editorial:'',\r\n        Año:''\r\n      })\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ButtonAppBar volver={Volver}/>\r\n        <Container className=\"contenedor-Form\">\r\n                  <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" spacing={1} className=\"margen\">\r\n                    <Grid item lg={5}>\r\n                    <FormControl id=\"formulario\" className=\"formulario-left\">\r\n                      <h2>Detalles de Solicitud</h2>\r\n                    <TextField\r\n                      name=\"Nombre\"\r\n                      error={controlLibro}\r\n                      id=\"nombre\" \r\n                      type=\"text\"\r\n                      label=\"Nombre de Libro\" \r\n                      value={libro.Nombre}\r\n                      variant=\"standard\"\r\n                      onChange={(e)=> controlCambios(e)}\r\n                      onBlur={validacionLibro}\r\n                      helperText={''}\r\n                      required\r\n                     />\r\n                     <br/>\r\n                    <TextField\r\n                      id=\"fechaPrestamo\"\r\n                      name=\"prestamo\"\r\n                      type=\"date\"\r\n                      label=\"Fecha de Préstamo\"\r\n                      value={libro.prestamo}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={controlFechaPrestamo}\r\n                      onBlur={(e)=>validarFechaPrestamo(e)}\r\n                      required\r\n                    />\r\n                    <br/>\r\n                    <TextField\r\n                      id=\"fechaDevolucion\"\r\n                      name=\"devolucion\"\r\n                      label=\"Fecha de Devolución\"\r\n                      type=\"date\"\r\n                      value={libro.devolucion}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={controlFechaDevolucion}\r\n                      onBlur={(e)=>validarFechaDevolucion(e)}\r\n                      required\r\n                    />\r\n                    <br/>                    \r\n                    <TextField\r\n                      name=\"Dueño\" \r\n                      id=\"dueño\" \r\n                      label=\"Solicitante\" \r\n                      variant=\"standard\"\r\n                      value={libro.Dueño}\r\n                      onChange={(e)=> controlCambios(e)}\r\n                      error={controlDueño}\r\n                      onBlur={validacionDueño}\r\n                      required\r\n                    />\r\n                    <br/>\r\n                    \r\n                    </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={5} className=\"\">\r\n                    <FormControl size=\"medium\" id=\"formulario\" className=\"formulario-right\">\r\n                        <h2>Detalles de Libro</h2>\r\n                        <TextField\r\n                          id=\"Autor\"\r\n                          name=\"Autor\"\r\n                          type=\"text\"\r\n                          label=\"Autor\"\r\n                          variant=\"standard\"\r\n                          value={libro.Autor}\r\n                          className={classes.textField}\r\n                          onChange={ e =>controlCambios(e)}\r\n                          error={controlAutor}\r\n                          onBlur={(e)=>validarAutor(e)}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Editorial\"\r\n                          name=\"Editorial\"\r\n                          type=\"text\"\r\n                          label=\"Editorial\"\r\n                          variant=\"standard\"\r\n                          value={libro.Editorial}\r\n                          className={classes.textField}\r\n                          onChange={ e =>controlCambios(e)}\r\n                          error={controlEditorial}\r\n                          onBlur={(e)=>validarEditorial(e)}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Año\"\r\n                          name=\"Año\"\r\n                          type=\"text\"\r\n                          label=\"Año de Edición\"\r\n                          value={libro.Año}\r\n                          className={classes.textField}\r\n                          onChange={ e =>controlCambios(e)}\r\n                          error={controlAño}\r\n                          onBlur={(e)=>validarAño(e)}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"contained\">\r\n                        <input\r\n                            name=\"Imagen\"\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={e=>controlCambios(e)}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"outlined\" color=\"primary\" component=\"span\">\r\n                                Imagen Libro\r\n                            </Button>\r\n                            <span>{libro.Imagen}</span>\r\n                        </label>\r\n                    </div>\r\n                   </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n        </Container>\r\n        \r\n        <div className=\"contenedor-botones\">\r\n          <Button \r\n            className=\"boton1\"\r\n            onClick={e=>resetear(e)} \r\n            variant=\"outlined\" \r\n            color=\"primary\">Limpiar Campos</Button>\r\n            <br/>\r\n         <Button \r\n            onClick={validarDatos} \r\n            variant=\"outlined\" \r\n            color=\"primary\" \r\n            disabled={controlBoton}\r\n            className=\"boton2\">Agregar Solicitud</Button>\r\n        </div>\r\n      </>  \r\n    )\r\n}\r\nexport default Libro;\r\n\r\n","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js",["75"],"import React, { useState } from 'react';\r\nimport SearchAppBar from '../App Bar/SearchAppBar';\r\nimport ListarConDatos from './ListarConDatos';\r\n\r\nconst Listar = ({Libros, controlBtnNuevo, libr}) => {\r\n    if(Libros !== null){\r\n      if(Libros.length !== 0){\r\n        return(\r\n          <div>\r\n            <SearchAppBar />\r\n            <br></br>\r\n            <ListarConDatos libros={Libros} btnNuevo={controlBtnNuevo} Libr={libr}/>\r\n    \r\n          </div>\r\n        );\r\n      }else{\r\n        return(\r\n          <div>\r\n    \r\n            <ListarConDatos libros={Libros} />\r\n            <h2>No se encontraron Datos!!!</h2>\r\n    \r\n          </div>\r\n        );\r\n      }\r\n    }else{\r\n      return(\r\n        <div>\r\n          <h1>Hubo un error tremendo</h1>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n}\r\nexport default Listar\r\n\r\n// Componente Listar determina si el arreglo esta vacio, lleno, hubo un error al obtener respuesta\r\n\r\n// {estado? Reac.createPortal(<Borrar id={idEliminar} cancelar={cancelarEliminar} okEliminado={okEliminar}/>, modalEliminar) :  null}\r\n\r\n// {estado? <Borrar id={idEliminar} cancelar={cancelarEliminar} okEliminado={okEliminar}/> :  null}\r\n\r\n  ","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js",[],["76","77"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\Theme.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\App.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\ButtonAppBar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\SearchAppBar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\ModificarLibro.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Card\\Card.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Popover\\SimplePopover.js",["78"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function SimplePopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        Open Popover\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":36,"column":15,"nodeType":"85","messageId":"86","endLine":36,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":39,"column":8,"nodeType":"89","endLine":39,"endColumn":10,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"79","replacedBy":"92"},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","severity":1,"message":"94","line":2,"column":36,"nodeType":"85","messageId":"86","endLine":2,"endColumn":41},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'fprestamo' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'solicitudAModificar'. Either include it or remove the dependency array. If 'setLibro' needs the current value of 'solicitudAModificar', you can also switch to useReducer instead of useState and read 'solicitudAModificar' in the reducer.","ArrayExpression",["97"],"'useState' is defined but never used.",["95"],["96"],"'Theme' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [solicitudAModificar]",{"range":"100","text":"101"},[1384,1386],"[solicitudAModificar]"]