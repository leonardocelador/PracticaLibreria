[{"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\index.js":"1","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\App.js":"2","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js":"3","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js":"4","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js":"5","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js":"6","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\SearchAppBar.js":"7","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\ButtonAppBar.js":"8","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Experimentando\\TablaListado.js":"9","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js":"10","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\PopOver\\PopOver.js":"11","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Card\\AppCard.js":"12","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js":"13","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js":"14","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js":"15"},{"size":350,"mtime":1610045864937,"results":"16","hashOfConfig":"17"},{"size":2095,"mtime":1610132066507,"results":"18","hashOfConfig":"17"},{"size":327,"mtime":1610045864937,"results":"19","hashOfConfig":"17"},{"size":12041,"mtime":1610132192518,"results":"20","hashOfConfig":"17"},{"size":1143,"mtime":1610045865052,"results":"21","hashOfConfig":"17"},{"size":3227,"mtime":1610388056769,"results":"22","hashOfConfig":"17"},{"size":2587,"mtime":1609872647777,"results":"23","hashOfConfig":"17"},{"size":1114,"mtime":1610045864934,"results":"24","hashOfConfig":"17"},{"size":8171,"mtime":1610391738669,"results":"25","hashOfConfig":"17"},{"size":180,"mtime":1609416585962,"results":"26","hashOfConfig":"17"},{"size":1005,"mtime":1610131533995,"results":"27","hashOfConfig":"17"},{"size":1660,"mtime":1610131533990,"results":"28","hashOfConfig":"17"},{"size":2417,"mtime":1609875794857,"results":"29","hashOfConfig":"17"},{"size":2075,"mtime":1610046984675,"results":"30","hashOfConfig":"17"},{"size":2523,"mtime":1609879656202,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"rusi7o",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\index.js",[],["64","65"],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\App.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js",["66"],"import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {FormControl, TextField, Button, Grid, Container} from '@material-ui/core';\r\nimport ButtonAppBar from '../App Bar/ButtonAppBar';\r\nimport '../Libro/libro.css';\r\n\r\n    \r\nexport const Libro = ({NuevoLibro , Volver, solicitudAModificar}) => {\r\n\r\n    const [libro, setLibro] = useState({\r\n        Id:'',\r\n        Nombre:'',\r\n        Dueño:'',\r\n        Imagen:'',\r\n        prestamo: '',\r\n        devolucion:'',\r\n        Eliminado:false,\r\n        Autor:'',\r\n        Editorial:'',\r\n        Año:''\r\n    })\r\n\r\n\r\n    const [controlLibro, setControlLibro] = useState(false);\r\n    const [controlDueño, setControlDueño] = useState(false);\r\n    const [controlFechaPrestamo, setcontrolFechaPrestamo] = useState(false);\r\n    const [controlFechaDevolucion, setcontrolFechaDevolucion] = useState(false);\r\n    const [controlAutor, setcontrolAutor] = useState(false);\r\n    const [controlEditorial, setcontrolEditorial] = useState(false);\r\n    const [controlAño, setcontrolAño] = useState(false);\r\n    \r\n    const [disabledLibro, setDisabledLibro] = useState(false);\r\n    const [disabledAutor, setDisabledAutor] = useState(false);\r\n    const [disabledEditorial, setDisabledEditorial] = useState(false);\r\n    const [disabledAño, setDisabledAño] = useState(false);\r\n    const [disabledImagen, setDisabledImagen] = useState(false);\r\n    const [controlBoton, setcontrolBoton] = useState(true);\r\n    \r\n    useEffect(() => {\r\n      if(solicitudAModificar){\r\n        setLibro(solicitudAModificar);\r\n        setDisabledLibro(true);\r\n        setDisabledAutor(true);\r\n        setDisabledEditorial(true);\r\n        setDisabledAño(true);\r\n        setDisabledImagen(true);\r\n      }\r\n    }, [])\r\n\r\n        //CAMBIOS LIBRO Y PROPIETARIO\r\n    const controlCambios = (e)=>{\r\n      setLibro({...libro,[e.target.name]:e.target.value}) \r\n    }\r\n\r\n        // BOTON EXAMINAR //\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n      }));\r\n    const classes = useStyles();\r\n    //\r\n\r\n    const validacionLibro = () => {\r\n      if(libro.Nombre===\"\")\r\n        setControlLibro(true);\r\n        else{\r\n          setControlDueño(false);\r\n          setcontrolBoton(false);\r\n        }\r\n\r\n    }\r\n    \r\n    const validacionDueño = () =>{\r\n      if(libro.Dueño===\"\")\r\n        setControlDueño(true);\r\n      else{\r\n        setControlDueño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n\r\n    const validarFechaPrestamo = (e) =>{\r\n      if(libro.prestamo===\"\")\r\n        setcontrolFechaPrestamo(true);\r\n        else{\r\n          setControlDueño(false);\r\n          setcontrolBoton(false);\r\n        }\r\n    }\r\n\r\n    const validarFechaDevolucion = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolFechaDevolucion(true);\r\n      else{\r\n        setControlDueño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n    const validarAutor = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolAutor(true);\r\n      else{\r\n        setcontrolAutor(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n    const validarEditorial = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolEditorial(true);\r\n      else{\r\n        setcontrolEditorial(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n    const validarAño = (e) =>{\r\n      if(libro.devolucion===\"\")\r\n      setcontrolAño(true);\r\n      else{\r\n        setcontrolAño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n\r\n    const validarDatos = ()=>{\r\n      const {Nombre, Dueño, Imagen, devolucion, prestamo, Autor, Editorial, Año}=libro;\r\n      \r\n      if(Nombre){\r\n        if(prestamo){\r\n          if(devolucion){\r\n            if(Date.parse(prestamo)>=Date.parse(devolucion))\r\n              alert(\"Fechas Inválidas! Verificar!!\");\r\n            if(Dueño){\r\n              if(Imagen){\r\n                if(Autor){\r\n                  if(Editorial){\r\n                    if(Año){\r\n                      alert(\"DATOS CORRECTOS!!! OBJETO CARGADO CORRECTAMENTE!!!\");\r\n                      console.log(Libro);\r\n                      Volver(1);\r\n                      NuevoLibro(libro);\r\n                    }\r\n                    else\r\n                      alert(\"Debe cargar Año de la Edición del Libro\");\r\n                  }\r\n                  else\r\n                    alert(\"Debe cargar Editorial del Libro\");\r\n                }\r\n                else\r\n                  alert(\"Debe cargar Autor del Libro\");\r\n              }\r\n                else{\r\n                  alert(\"Debe cargar Imagen\");\r\n                }\r\n            }\r\n            else\r\n             alert(\"Debe cargar Propietario\");\r\n          }\r\n          else\r\n            alert(\"Debe cargar Fecha de Devolución\");\r\n        }\r\n        else\r\n          alert(\"Debe cargar Fecha de Préstamo\");\r\n      }\r\n      else\r\n        alert(\"Debe cargar Nombre de Libro\");\r\n    \r\n      \r\n    }\r\n    const resetear = () => {\r\n      setLibro({\r\n        Nombre:'',\r\n        Dueño:'',\r\n        Imagen:'',\r\n        prestamo: '',\r\n        devolucion:'',\r\n        Autor:'',\r\n        Editorial:'',\r\n        Año:''\r\n      })\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ButtonAppBar volver={Volver}/>\r\n        <Container className=\"contenedor-Form\">\r\n                  <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" spacing={1} className=\"margen\">\r\n                    <Grid item lg={5}>\r\n                    <FormControl id=\"formulario\" className=\"formulario-left\">\r\n                      <h2>Detalles de Solicitud</h2>\r\n                     <br/>\r\n                    <TextField\r\n                      id=\"fechaPrestamo\"\r\n                      name=\"prestamo\"\r\n                      type=\"date\"\r\n                      label=\"Fecha de Préstamo\"\r\n                      value={libro.prestamo}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={controlFechaPrestamo}\r\n                      onBlur={(e)=>validarFechaPrestamo(e)}\r\n                      required\r\n                    />\r\n                    <br/>\r\n                    <TextField\r\n                      id=\"fechaDevolucion\"\r\n                      name=\"devolucion\"\r\n                      label=\"Fecha de Devolución\"\r\n                      type=\"date\"\r\n                      value={libro.devolucion}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={controlFechaDevolucion}\r\n                      onBlur={(e)=>validarFechaDevolucion(e)}\r\n                      required\r\n                    />\r\n                    <br/>                    \r\n                    <TextField\r\n                      name=\"Dueño\" \r\n                      id=\"dueño\" \r\n                      label=\"Solicitante\" \r\n                      variant=\"standard\"\r\n                      value={libro.Dueño}\r\n                      onChange={(e)=> controlCambios(e)}\r\n                      error={controlDueño}\r\n                      onBlur={validacionDueño}\r\n                      required\r\n                    />\r\n                    <br/>\r\n                    \r\n                    </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={5} className=\"\">\r\n                    <FormControl size=\"medium\" id=\"formulario\" className=\"formulario-right\">\r\n                        <h2>Detalles de Libro</h2>\r\n                        <TextField\r\n                          name=\"Nombre\"\r\n                          error={controlLibro}\r\n                          disabled={disabledLibro}\r\n                          id=\"nombre\" \r\n                          type=\"text\"\r\n                          label=\"Nombre de Libro\" \r\n                          value={libro.Nombre}\r\n                          variant=\"standard\"\r\n                          onChange={(e)=> controlCambios(e)}\r\n                          onBlur={validacionLibro}\r\n                          helperText={''}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Autor\"\r\n                          name=\"Autor\"\r\n                          type=\"text\"\r\n                          label=\"Autor\"\r\n                          variant=\"standard\"\r\n                          value={libro.Autor}\r\n                          className={classes.textField}\r\n                          onChange={ e =>controlCambios(e)}\r\n                          error={controlAutor}\r\n                          disabled={disabledAutor}\r\n                          onBlur={(e)=>validarAutor(e)}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Editorial\"\r\n                          name=\"Editorial\"\r\n                          type=\"text\"\r\n                          label=\"Editorial\"\r\n                          variant=\"standard\"\r\n                          value={libro.Editorial}\r\n                          className={classes.textField}\r\n                          onChange={ e =>controlCambios(e)}\r\n                          error={controlEditorial}\r\n                          disabled={disabledEditorial}\r\n                          onBlur={(e)=>validarEditorial(e)}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                          id=\"Año\"\r\n                          name=\"Año\"\r\n                          type=\"text\"\r\n                          label=\"Año de Edición\"\r\n                          value={libro.Año}\r\n                          className={classes.textField}\r\n                          onChange={ e =>controlCambios(e)}\r\n                          error={controlAño}\r\n                          disabled={disabledAño}\r\n                          onBlur={(e)=>validarAño(e)}\r\n                          required\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"contained\">\r\n                        <input\r\n                            name=\"Imagen\"\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={e=>controlCambios(e)}\r\n                            disabled={disabledImagen}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button disabled={disabledImagen} variant=\"outlined\" color=\"primary\" component=\"span\">\r\n                                Imagen Libro\r\n                            </Button>\r\n                            <span>{libro.Imagen}</span>\r\n                        </label>\r\n                    </div>\r\n                   </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n        </Container>\r\n        \r\n        <div className=\"contenedor-botones\">\r\n          <Button \r\n            className=\"boton1\"\r\n            onClick={e=>resetear(e)} \r\n            variant=\"outlined\" \r\n            color=\"primary\">Limpiar Campos</Button>\r\n            <br/>\r\n         <Button \r\n            onClick={validarDatos} \r\n            variant=\"outlined\" \r\n            color=\"primary\" \r\n            disabled={controlBoton}\r\n            className=\"boton2\">Agregar Solicitud</Button>\r\n        </div>\r\n      </>  \r\n    )\r\n}\r\nexport default Libro;\r\n\r\n","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\SearchAppBar.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\App Bar\\ButtonAppBar.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Experimentando\\TablaListado.js",["67","68"],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\PopOver\\PopOver.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Card\\AppCard.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":48,"column":8,"nodeType":"75","endLine":48,"endColumn":10,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":16,"column":10,"nodeType":"79","messageId":"80","endLine":16,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":22,"column":54,"nodeType":"83","messageId":"84","endLine":22,"endColumn":56},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'solicitudAModificar'. Either include it or remove the dependency array. If 'setLibro' needs the current value of 'solicitudAModificar', you can also switch to useReducer instead of useState and read 'solicitudAModificar' in the reducer.","ArrayExpression",["87"],"no-unused-vars","'red' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [solicitudAModificar]",{"range":"90","text":"91"},[1768,1770],"[solicitudAModificar]"]