[{"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\index.js":"1","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js":"2","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\eliminar.js":"3","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js":"4","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js":"5","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js":"6","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js":"7","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js":"8","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js":"9","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\App.js":"10"},{"size":447,"mtime":1609426147754,"results":"11","hashOfConfig":"12"},{"size":1045,"mtime":1609423197046,"results":"13","hashOfConfig":"12"},{"size":3034,"mtime":1609188870821,"results":"14","hashOfConfig":"12"},{"size":177,"mtime":1609267508360,"results":"15","hashOfConfig":"12"},{"size":2101,"mtime":1609418030376,"results":"16","hashOfConfig":"12"},{"size":2039,"mtime":1609423386504,"results":"17","hashOfConfig":"12"},{"size":7129,"mtime":1609426029806,"results":"18","hashOfConfig":"12"},{"size":180,"mtime":1609416585962,"results":"19","hashOfConfig":"12"},{"size":6979,"mtime":1609426102805,"results":"20","hashOfConfig":"12"},{"size":641,"mtime":1609426993642,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rusi7o",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\index.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js",["45"],"import React, { useState } from 'react';\r\nimport ListarConDatos from './ListarConDatos';\r\n\r\nconst Listar = ({Libros, controlBtnNuevo}) => {\r\n    \r\n    if(Libros !== null){\r\n      if(Libros.length !== 0){\r\n        return(\r\n          <div>\r\n    \r\n            <ListarConDatos libros={Libros} btnNuevo={controlBtnNuevo}/>\r\n    \r\n          </div>\r\n        );\r\n      }else{\r\n        return(\r\n          <div>\r\n    \r\n            <ListarConDatos libros={Libros} />\r\n            <h2>No se encontraron Datos!!!</h2>\r\n    \r\n          </div>\r\n        );\r\n      }\r\n    }else{\r\n      return(\r\n        <div>\r\n          <h1>Hubo un error tremendo</h1>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n}\r\nexport default Listar\r\n\r\n// Componente Listar determina si el arreglo esta vacio, lleno, hubo un error al obtener respuesta\r\n\r\n// {estado? Reac.createPortal(<Borrar id={idEliminar} cancelar={cancelarEliminar} okEliminado={okEliminar}/>, modalEliminar) :  null}\r\n\r\n// {estado? <Borrar id={idEliminar} cancelar={cancelarEliminar} okEliminado={okEliminar}/> :  null}\r\n\r\n  ",["46","47"],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\eliminar.js",["48","49","50","51"],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js",["52"],"import React, { useState } from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Borrar from './Eliminar';\r\nimport Modificar from './Modificar';\r\nimport Nuevo from './Nuevo';\r\nimport  Modal  from './Modal';\r\n\r\nconst ListarConDatos = ({libros, btnNuevo}) => {\r\n\r\n        \r\n        const [color,] = useState(\"#dca4a4\") // color que tendra la fila morosa\r\n        const [idEliminar, setidEliminar] = useState(\"\") \r\n        const [estadoEliminar, setestadoEliminar] = useState(false)//ocultar - mostrar modal\r\n        const [estadomodif, setestadomodif] = useState(false) //ocultar - mostrar modal\r\n        const [estadoNuevo, setestadoNuevo] = useState(false) //ocultar - mostrar modal\r\n        const [libroaModificar, setlibroaModificar] = useState() \r\n        const f = new Date();\r\n        const fechaActual = f.getDate() + \"/\" + (f.getMonth() +1) + \"/\" + f.getFullYear();\r\n        console.log(fechaActual)\r\n        \r\n        // Estilos del Table\r\n        const useStyles = makeStyles({\r\n            table: {\r\n              minWidth: 650,\r\n            },\r\n          });\r\n          \r\n          const StyledTableCell = withStyles((theme) => ({\r\n            head: {\r\n              backgroundColor: theme.palette.common.black,\r\n              color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n              fontSize: 14,\r\n            },\r\n          }))(TableCell);\r\n          \r\n          const StyledTableRow = withStyles((theme) => ({\r\n            root: {\r\n              '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n              },\r\n            },\r\n          }))(TableRow);\r\n\r\n        const classes = useStyles();\r\n\r\n        // funcionalidad ocultar o mostrar modal Modificar \r\n        const btnModificar = (libroSelect) =>{\r\n          //  debugger;\r\n            setestadomodif(!estadomodif)\r\n            setlibroaModificar(libroSelect)\r\n            // setTimeout( console.log(libroaModificar),3000);   \r\n        }\r\n\r\n        // funcionalidad Cancelar del modal Elminar\r\n        const cancelarEliminar = () => {\r\n           setestadoEliminar(false)\r\n          }\r\n\r\n        // funcionalidad al presionar Ok del modal eliminar, accion elimina el libro correspondiente\r\n        const okEliminar = (idEliminado) => {\r\n            setestadoEliminar(false)\r\n            alert(\"Libro\" + idEliminado + \"Eliminado con exito\")\r\n            var indice = libros.indexOf(idEliminado); // obtenemos el indice del objeto a eliminar\r\n            libros.splice(indice, 1); // 1 es la cantidad de elemento a eliminar\r\n            console.log( libros );\r\n        }\r\n        \r\n        // muestra u oculta modal eliminar y envia el id correspondiente del libro seleccionado\r\n        const LlamaModalEliminar = (id) => {\r\n          setestadoEliminar(!estadoEliminar)\r\n          setidEliminar(id)\r\n        }  \r\n\r\n      return (\r\n      <div>\r\n        <TableContainer component={Paper }>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">Mis Libros</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Responsable</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Detalle</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Fecha de Prestamo</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Fecha de Devolucion</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Acciones</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n           \r\n            {libros.map((libro) => {\r\n                if (libro.fechaPrestamo > \"27/12/20\" && libro.fechaDevolucion === \"\") {\r\n                  return (\r\n                    <StyledTableRow  style={{background: color}} key={libro.Id}>\r\n                      <StyledTableCell align=\"left\">{libro.nombre}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.due√±o}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.Pedido}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.fechaPrestamo}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.fechaDevolucion}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">\r\n                        <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                             onClick={()=>btnModificar(libro)}><i className=\"material-icons\">brush</i>\r\n                        </button> \r\n                        <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                            onClick={()=>LlamaModalEliminar(libro.Id)}><i className=\"material-icons\">delete</i>\r\n                        </button></StyledTableCell>\r\n                    </StyledTableRow>);\r\n                }\r\n                return (\r\n                    <StyledTableRow  style={{background:\"\"}} key={libro.Id}>\r\n                    <StyledTableCell align=\"left\">{libro.nombre}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.due√±o}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.Pedido}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.fechaPrestamo}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.fechaDevolucion}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                          onClick={()=>btnModificar(libro)}> <i className=\"material-icons\">brush</i>\r\n                      </button> \r\n                      \r\n                      <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                          onClick={()=>LlamaModalEliminar(libro.Id)}><i className=\"material-icons\">delete</i>\r\n                      </button></StyledTableCell>\r\n                    </StyledTableRow>\r\n                );\r\n               \r\n              \r\n             \r\n                })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n      {estadoEliminar? <Modal><Borrar id={idEliminar} cancelar={cancelarEliminar} okEliminado={okEliminar} estadoEliminarModal={setestadoEliminar}/></Modal> :  null}\r\n      {estadomodif? <Modificar/> : null}\r\n      <hr></hr>\r\n      <button className=\"waves-effect waves-light btn\" onClick={()=>setestadoNuevo(!estadoNuevo)}>Nuevo</button>\r\n      {estadoNuevo? <Modal><Nuevo estadoNuevoModal={setestadoNuevo} agregarNuevo={btnNuevo}/></Modal> : null}\r\n      </div>\r\n    )\r\n       \r\n}\r\n\r\nexport default ListarConDatos\r\n","C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js",[],"C:\\Users\\Sergio Ledesma\\Desktop\\react-biblio\\PracticaLibreria\\my-app\\src\\App.js",[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"53","severity":1,"message":"61","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":20},{"ruleId":"62","severity":2,"message":"63","line":11,"column":29,"nodeType":"55","endLine":11,"endColumn":37},{"ruleId":"64","severity":2,"message":"65","line":42,"column":20,"nodeType":"55","messageId":"66","endLine":42,"endColumn":27},{"ruleId":"64","severity":2,"message":"65","line":52,"column":27,"nodeType":"55","messageId":"66","endLine":52,"endColumn":34},{"ruleId":"53","severity":1,"message":"67","line":23,"column":16,"nodeType":"55","messageId":"56","endLine":23,"endColumn":31},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'makeStyles' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"eliminar\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'classes' is not defined.","undef","'libroaModificar' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]