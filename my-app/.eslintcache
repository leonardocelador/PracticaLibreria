[{"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js":"1","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js":"2","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js":"3","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js":"4","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js":"5","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js":"6","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js":"7","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js":"8","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\Theme.js":"9","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js":"10","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\App.js":"11"},{"size":500,"mtime":1609792592336,"results":"12","hashOfConfig":"13"},{"size":7244,"mtime":1609792592524,"results":"14","hashOfConfig":"13"},{"size":1045,"mtime":1609792592283,"results":"15","hashOfConfig":"13"},{"size":7109,"mtime":1609792592291,"results":"16","hashOfConfig":"13"},{"size":2101,"mtime":1609431900030,"results":"17","hashOfConfig":"13"},{"size":2039,"mtime":1609792592334,"results":"18","hashOfConfig":"13"},{"size":180,"mtime":1609431900110,"results":"19","hashOfConfig":"13"},{"size":177,"mtime":1609431900144,"results":"20","hashOfConfig":"13"},{"size":254,"mtime":1609773027499,"results":"21","hashOfConfig":"13"},{"size":254,"mtime":1609773027499,"results":"22","hashOfConfig":"13"},{"size":644,"mtime":1609792592249,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"e8odm",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js",["49"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js",["50","51"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Container, FormControl, TextField, Button, ThemeProvider, Grid} from '@material-ui/core';\r\nimport theme from '../Theme/theme';\r\nimport '../Libro/libro.css';\r\n    \r\nconst Libro = () => {\r\n\r\n    const [libro, setLibro] = useState({\r\n        Id:'',\r\n        nombre:'',\r\n        dueño:'',\r\n        imagen:'',\r\n        fechaPrestamo: '',\r\n        fechaDevolucion:'',\r\n        eliminado:false,\r\n        Pedido:''\r\n    })\r\n\r\n\r\n    const [controlLibro, setControlLibro] = useState(false);\r\n    const [controlDueño, setControlDueño] = useState(false);\r\n    const [controlFechaPrestamo, setcontrolFechaPrestamo] = useState(false);\r\n    const [controlFechaDevolucion, setcontrolFechaDevolucion] = useState(false);\r\n    const [controlBoton, setcontrolBoton] = useState(true)\r\n\r\n\r\n\r\n        //CAMBIOS LIBRO Y PROPIETARIO\r\n    const controlCambios = (e)=>{\r\n      setLibro({...libro,[e.target.name]:e.target.value}) \r\n    }\r\n\r\n        // BOTON EXAMINAR //\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n      }));\r\n    const classes = useStyles();\r\n    //\r\n\r\n    const validacionLibro = () => {\r\n      if(libro.nombre===\"\")\r\n        setControlLibro(true);\r\n        else{\r\n          setControlDueño(false);\r\n          setcontrolBoton(false);\r\n        }\r\n\r\n    }\r\n    \r\n    const validacionDueño = () =>{\r\n      if(libro.dueño===\"\")\r\n        setControlDueño(true);\r\n      else{\r\n        setControlDueño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n\r\n    const validarFechaPrestamo = (e) =>{\r\n      if(libro.fechaPrestamo===\"\")\r\n        setcontrolFechaPrestamo(true);\r\n        else{\r\n          setControlDueño(false);\r\n          setcontrolBoton(false);\r\n        }\r\n    }\r\n\r\n    const validarFechaDevolucion = (e) =>{\r\n      if(libro.fechaDevolucion===\"\")\r\n      setcontrolFechaDevolucion(true);\r\n      else{\r\n        setControlDueño(false);\r\n        setcontrolBoton(false);\r\n      }\r\n    }\r\n\r\n    const validarDatos = ()=>{\r\n      const {nombre, dueño, imagen, fechaDevolucion, fechaPrestamo}=libro;\r\n      \r\n      if(nombre){\r\n        if(fechaPrestamo){\r\n          if(fechaDevolucion){\r\n            if(Date.parse(fechaPrestamo)>=Date.parse(fechaDevolucion))\r\n              alert(\"Fechas Inválidas! Verificar!!\");\r\n            if(dueño){\r\n              if(imagen)\r\n                alert(\"DATOS CORRECTOS!!! OBJETO CARGADO CORRECTAMENTE!!!\");\r\n                else\r\n                  alert(\"Debe cargar Imagen\");\r\n            }\r\n            else\r\n             alert(\"Debe cargar Propietario\");\r\n          }\r\n          else\r\n            alert(\"Debe cargar Fecha de Devolución\");\r\n        }\r\n        else\r\n          alert(\"Debe cargar Fecha de Préstamo\");\r\n      }\r\n      else\r\n        alert(\"Debe cargar Nombre de Libro\");\r\n    \r\n      console.log(libro);\r\n    }\r\n    const resetear = () => {\r\n      setLibro({\r\n        nombre:'',\r\n        dueño:'',\r\n        imagen:'',\r\n        fechaPrestamo: '',\r\n        fechaDevolucion:'',\r\n      })\r\n    }\r\n\r\n    return (\r\n        <div className=\"body\">\r\n          <ThemeProvider theme={theme}>\r\n                <FormControl id=\"formulario\" className=\"formulario\">\r\n                    <br/>\r\n                    <TextField\r\n                      name=\"nombre\"\r\n                      error={controlLibro}\r\n                      id=\"nombre\" \r\n                      type=\"text\"\r\n                      label=\"Libro\" \r\n                      value={libro.nombre}\r\n                      variant=\"standard\"\r\n                      onChange={(e)=> controlCambios(e)}\r\n                      onBlur={validacionLibro}\r\n                      helperText={''}\r\n                      required\r\n                     />\r\n                    <br/>\r\n\r\n                    <TextField\r\n                      id=\"fechaPrestamo\"\r\n                      name=\"fechaPrestamo\"\r\n                      type=\"date\"\r\n                      label=\"Fecha de Préstamo\"\r\n                      value={libro.fechaPrestamo}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={controlFechaPrestamo}\r\n                      onBlur={(e)=>validarFechaPrestamo(e)}\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      id=\"fechaDevolucion\"\r\n                      name=\"fechaDevolucion\"\r\n                      label=\"Fecha de Devolución\"\r\n                      type=\"date\"\r\n                      value={libro.fechaDevolucion}\r\n                      className={classes.textField}\r\n                      onChange={ e =>controlCambios(e)}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      error={controlFechaDevolucion}\r\n                      onBlur={(e)=>validarFechaDevolucion(e)}\r\n                      required\r\n                    />\r\n\r\n                    \r\n                    <TextField\r\n                      name=\"dueño\" \r\n                      id=\"dueño\" \r\n                      label=\"Propietario\" \r\n                      variant=\"standard\"\r\n                      value={libro.dueño}\r\n                      onChange={(e)=> controlCambios(e)}\r\n                      error={controlDueño}\r\n                      onBlur={validacionDueño}\r\n                      required\r\n                    />\r\n\r\n                    <br/>\r\n                    <div className=\"contained\">\r\n                        <input\r\n                            name=\"imagen\"\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={e=>controlCambios(e)}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"outlined\" color=\"primary\" component=\"span\">\r\n                                Examinar\r\n                            </Button>\r\n                            <span>{libro.imagen}</span>\r\n                        </label>\r\n                    </div>\r\n                    <br/>\r\n                    </FormControl>\r\n                  <div className=\"contenedor-botones\">\r\n\r\n                    <Button onClick={e=>resetear(e)} variant=\"outlined\" color=\"primary\">Limpiar Campos</Button>\r\n                    \r\n                    <br/>\r\n                    <Button \r\n                      onClick={validarDatos} \r\n                      variant=\"outlined\" \r\n                      color=\"primary\" \r\n                      disabled={controlBoton}\r\n                    >Agregar Libro</Button>\r\n\r\n                  </div>\r\n\r\n\r\n          </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\nexport default Libro;\r\n\r\n",["52","53"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js",["54"],"import React, { useState } from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Borrar from './Eliminar';\r\nimport Modificar from './Modificar';\r\nimport Nuevo from './Nuevo';\r\nimport  Modal  from './Modal';\r\n\r\nconst ListarConDatos = ({libros}) => {\r\n\r\n        \r\n        const [color,] = useState(\"#dca4a4\") // color que tendra la fila morosa\r\n        const [idEliminar, setidEliminar] = useState(\"\") \r\n        const [estadoEliminar, setestadoEliminar] = useState(false)//ocultar - mostrar modal\r\n        const [estadomodif, setestadomodif] = useState(false) //ocultar - mostrar modal\r\n        const [estadoNuevo, setestadoNuevo] = useState(false) //ocultar - mostrar modal\r\n        const [libroaModificar, setlibroaModificar] = useState() \r\n        const f = new Date();\r\n        const fechaActual = f.getDate() + \"/\" + (f.getMonth() +1) + \"/\" + f.getFullYear();\r\n        console.log(fechaActual)\r\n        \r\n        // Estilos del Table\r\n        const useStyles = makeStyles({\r\n            table: {\r\n              minWidth: 650,\r\n            },\r\n          });\r\n          \r\n          const StyledTableCell = withStyles((theme) => ({\r\n            head: {\r\n              backgroundColor: theme.palette.common.black,\r\n              color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n              fontSize: 14,\r\n            },\r\n          }))(TableCell);\r\n          \r\n          const StyledTableRow = withStyles((theme) => ({\r\n            root: {\r\n              '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n              },\r\n            },\r\n          }))(TableRow);\r\n\r\n        const classes = useStyles();\r\n\r\n        // funcionalidad ocultar o mostrar modal Modificar \r\n        const btnModificar = (libroSelect) =>{\r\n          //  debugger;\r\n            setestadomodif(!estadomodif)\r\n            setlibroaModificar(libroSelect)\r\n            // setTimeout( console.log(libroaModificar),3000);   \r\n        }\r\n\r\n        // funcionalidad Cancelar del modal Elminar\r\n        const cancelarEliminar = () => {\r\n           setestadoEliminar(false)\r\n          }\r\n\r\n        // funcionalidad al presionar Ok del modal eliminar, accion elimina el libro correspondiente\r\n        const okEliminar = (idEliminado) => {\r\n            setestadoEliminar(false)\r\n            alert(\"Libro\" + idEliminado + \"Eliminado con exito\")\r\n            var indice = libros.indexOf(idEliminado); // obtenemos el indice del objeto a eliminar\r\n            libros.splice(indice, 1); // 1 es la cantidad de elemento a eliminar\r\n            console.log( libros );\r\n        }\r\n        \r\n        // muestra u oculta modal eliminar y envia el id correspondiente del libro seleccionado\r\n        const LlamaModalEliminar = (id) => {\r\n          setestadoEliminar(!estadoEliminar)\r\n          setidEliminar(id)\r\n        }  \r\n\r\n      return (\r\n      <div>\r\n        <TableContainer component={Paper }>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">Mis Libros</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Responsable</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Detalle</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Fecha de Prestamo</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Fecha de Devolucion</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Acciones</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n           \r\n            {libros.map((libro) => {\r\n                if (libro.prestamo > \"27/12/20\" && libro.devolucion === \"\") {\r\n                  return (\r\n                    <StyledTableRow  style={{background: color}} key={libro.Id}>\r\n                      <StyledTableCell align=\"left\">{libro.Nombre}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.Dueño}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.Pedido}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.prestamo}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.devolucion}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">\r\n                        <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                             onClick={()=>btnModificar(libro)}><i className=\"material-icons\">brush</i>\r\n                        </button> \r\n                        <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                            onClick={()=>LlamaModalEliminar(libro.Id)}><i className=\"material-icons\">delete</i>\r\n                        </button></StyledTableCell>\r\n                    </StyledTableRow>);\r\n                }\r\n                return (\r\n                    <StyledTableRow  style={{background:\"\"}} key={libro.Id}>\r\n                    <StyledTableCell align=\"left\">{libro.Nombre}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.Dueño}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.Pedido}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.prestamo}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.devolucion}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                          onClick={()=>btnModificar(libro)}> <i className=\"material-icons\">brush</i>\r\n                      </button> \r\n                      \r\n                      <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                          onClick={()=>LlamaModalEliminar(libro.Id)}><i className=\"material-icons\">delete</i>\r\n                      </button></StyledTableCell>\r\n                    </StyledTableRow>\r\n                );\r\n               \r\n              \r\n             \r\n                })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n      {estadoEliminar? <Modal><Borrar id={idEliminar} cancelar={cancelarEliminar} okEliminado={okEliminar} estadoEliminarModal={setestadoEliminar}/></Modal> :  null}\r\n      {estadomodif? <Modificar/> : null}\r\n      <hr></hr>\r\n      <button className=\"waves-effect waves-light btn\" onClick={()=>setestadoNuevo(!estadoNuevo)}>Nuevo</button>\r\n      {estadoNuevo? <Modal><Nuevo estadoNuevoModal={setestadoNuevo}/></Modal> : null}\r\n      </div>\r\n    )\r\n       \r\n}\r\n\r\nexport default ListarConDatos\r\n","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\Theme.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Theme\\theme.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\App.js",[],{"ruleId":"55","severity":1,"message":"56","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":13},{"ruleId":"55","severity":1,"message":"59","line":3,"column":9,"nodeType":"57","messageId":"58","endLine":3,"endColumn":18},{"ruleId":"55","severity":1,"message":"60","line":3,"column":67,"nodeType":"57","messageId":"58","endLine":3,"endColumn":71},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"55","severity":1,"message":"65","line":23,"column":16,"nodeType":"57","messageId":"58","endLine":23,"endColumn":31},"no-unused-vars","'Libro' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Grid' is defined but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'libroaModificar' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]