[{"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js":"1","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js":"2","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js":"3","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js":"4","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js":"5","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js":"6","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js":"7","C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js":"8"},{"size":527,"mtime":1609436514925,"results":"9","hashOfConfig":"10"},{"size":6929,"mtime":1609436624663,"results":"11","hashOfConfig":"10"},{"size":1081,"mtime":1609434405223,"results":"12","hashOfConfig":"10"},{"size":7065,"mtime":1609431900109,"results":"13","hashOfConfig":"10"},{"size":2101,"mtime":1609431900030,"results":"14","hashOfConfig":"10"},{"size":2022,"mtime":1609431900184,"results":"15","hashOfConfig":"10"},{"size":180,"mtime":1609431900110,"results":"16","hashOfConfig":"10"},{"size":177,"mtime":1609431900144,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"e8odm",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\index.js",["36"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Libro\\Libro.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Listar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\ListarConDatos.js",["37"],"import React, { useState } from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Borrar from './Eliminar';\r\nimport Modificar from './Modificar';\r\nimport Nuevo from './Nuevo';\r\nimport  Modal  from './Modal';\r\n\r\nconst ListarConDatos = ({libros}) => {\r\n\r\n        \r\n        const [color,] = useState(\"#dca4a4\") // color que tendra la fila morosa\r\n        const [idEliminar, setidEliminar] = useState(\"\") \r\n        const [estadoEliminar, setestadoEliminar] = useState(false)//ocultar - mostrar modal\r\n        const [estadomodif, setestadomodif] = useState(false) //ocultar - mostrar modal\r\n        const [estadoNuevo, setestadoNuevo] = useState(false) //ocultar - mostrar modal\r\n        const [libroaModificar, setlibroaModificar] = useState() \r\n        const f = new Date();\r\n        const fechaActual = f.getDate() + \"/\" + (f.getMonth() +1) + \"/\" + f.getFullYear();\r\n        console.log(fechaActual)\r\n        \r\n        // Estilos del Table\r\n        const useStyles = makeStyles({\r\n            table: {\r\n              minWidth: 650,\r\n            },\r\n          });\r\n          \r\n          const StyledTableCell = withStyles((theme) => ({\r\n            head: {\r\n              backgroundColor: theme.palette.common.black,\r\n              color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n              fontSize: 14,\r\n            },\r\n          }))(TableCell);\r\n          \r\n          const StyledTableRow = withStyles((theme) => ({\r\n            root: {\r\n              '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n              },\r\n            },\r\n          }))(TableRow);\r\n\r\n        const classes = useStyles();\r\n\r\n        // funcionalidad ocultar o mostrar modal Modificar \r\n        const btnModificar = (libroSelect) =>{\r\n          //  debugger;\r\n            setestadomodif(!estadomodif)\r\n            setlibroaModificar(libroSelect)\r\n            // setTimeout( console.log(libroaModificar),3000);   \r\n        }\r\n\r\n        // funcionalidad Cancelar del modal Elminar\r\n        const cancelarEliminar = () => {\r\n           setestadoEliminar(false)\r\n          }\r\n\r\n        // funcionalidad al presionar Ok del modal eliminar, accion elimina el libro correspondiente\r\n        const okEliminar = (idEliminado) => {\r\n            setestadoEliminar(false)\r\n            alert(\"Libro\" + idEliminado + \"Eliminado con exito\")\r\n            var indice = libros.indexOf(idEliminado); // obtenemos el indice del objeto a eliminar\r\n            libros.splice(indice, 1); // 1 es la cantidad de elemento a eliminar\r\n            console.log( libros );\r\n        }\r\n        \r\n        // muestra u oculta modal eliminar y envia el id correspondiente del libro seleccionado\r\n        const LlamaModalEliminar = (id) => {\r\n          setestadoEliminar(!estadoEliminar)\r\n          setidEliminar(id)\r\n        }  \r\n\r\n      return (\r\n      <div>\r\n        <TableContainer component={Paper }>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">Mis Libros</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Responsable</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Detalle</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Fecha de Prestamo</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Fecha de Devolucion</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Acciones</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n           \r\n            {libros.map((libro) => {\r\n                if (libro.prestamo > \"27/12/20\" && libro.devolucion === \"\") {\r\n                  return (\r\n                    <StyledTableRow  style={{background: color}} key={libro.Id}>\r\n                      <StyledTableCell align=\"left\">{libro.Nombre}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.Dueño}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.Pedido}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.prestamo}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{libro.devolucion}</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">\r\n                        <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                             onClick={()=>btnModificar(libro)}><i className=\"material-icons\">brush</i>\r\n                        </button> \r\n                        <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                            onClick={()=>LlamaModalEliminar(libro.Id)}><i className=\"material-icons\">delete</i>\r\n                        </button></StyledTableCell>\r\n                    </StyledTableRow>);\r\n                }\r\n                return (\r\n                    <StyledTableRow  style={{background:\"\"}} key={libro.Id}>\r\n                    <StyledTableCell align=\"left\">{libro.Nombre}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.Dueño}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.Pedido}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.prestamo}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{libro.devolucion}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                          onClick={()=>btnModificar(libro)}> <i className=\"material-icons\">brush</i>\r\n                      </button> \r\n                      \r\n                      <button className=\"btn-floating btn-small waves-effect waves-light red\" \r\n                          onClick={()=>LlamaModalEliminar(libro.Id)}><i className=\"material-icons\">delete</i>\r\n                      </button></StyledTableCell>\r\n                    </StyledTableRow>\r\n                );\r\n               \r\n              \r\n             \r\n                })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n      {estadoEliminar? <Modal><Borrar id={idEliminar} cancelar={cancelarEliminar} okEliminado={okEliminar} estadoEliminarModal={setestadoEliminar}/></Modal> :  null}\r\n      {estadomodif? <Modificar/> : null}\r\n      <hr></hr>\r\n      <button className=\"waves-effect waves-light btn\" onClick={()=>setestadoNuevo(!estadoNuevo)}>Nuevo</button>\r\n      {estadoNuevo? <Modal><Nuevo estadoNuevoModal={setestadoNuevo}/></Modal> : null}\r\n      </div>\r\n    )\r\n       \r\n}\r\n\r\nexport default ListarConDatos\r\n",["38","39"],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Eliminar.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Nuevo.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modal.js",[],"C:\\Users\\Maximiliano Santana\\Desktop\\Practicas\\PracticaLibreria\\my-app\\src\\componentes\\Listar\\Modificar.js",[],{"ruleId":"40","severity":1,"message":"41","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":14},{"ruleId":"40","severity":1,"message":"44","line":23,"column":16,"nodeType":"42","messageId":"43","endLine":23,"endColumn":31},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},"no-unused-vars","'Listar' is defined but never used.","Identifier","unusedVar","'libroaModificar' is assigned a value but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-global-assign","no-unsafe-negation"]